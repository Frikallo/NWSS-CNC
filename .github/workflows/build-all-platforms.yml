name: Build All Platforms

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            name: Windows
            cmake_generator: "Visual Studio 17 2022"
            cmake_arch: "-A x64"
            qt_host: windows
            artifact_name: nwss-cnc-windows
            package_ext: "*.zip;*.exe"
            
          - os: macos-latest
            name: macOS
            cmake_generator: "Unix Makefiles"
            cmake_arch: ""
            qt_host: mac
            artifact_name: nwss-cnc-macos
            package_ext: "*.dmg;*.app"
            
    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.name }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.0'
        host: ${{ matrix.qt_host }}
        target: 'desktop'
        modules: 'qtserialport qtsvg'
        cache: true
        
    - name: Set up MSVC (Windows only)
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v1.1
      
    - name: Configure CMake
      run: |
        cmake -B build -S nwss-cnc -G "${{ matrix.cmake_generator }}" ${{ matrix.cmake_arch }} -DCMAKE_BUILD_TYPE=Release
        
    - name: Build
      run: |
        cmake --build build --config Release --target nwss-cnc
        
    - name: Deploy Qt (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Find windeployqt
        $qtPath = (Get-Command qmake).Source | Split-Path
        $windeployqt = Join-Path $qtPath "windeployqt.exe"
        
        if (Test-Path $windeployqt) {
          Write-Host "Found windeployqt at: $windeployqt"
          & $windeployqt --release --no-translations --no-system-d3d-compiler --no-opengl-sw build/Release/nwss-cnc.exe
        } else {
          Write-Host "windeployqt not found, trying alternative locations..."
          Get-ChildItem -Path $env:Qt6_DIR -Recurse -Name "windeployqt.exe" | ForEach-Object { Write-Host $_ }
        }
        
    - name: Create Windows Package
      if: matrix.os == 'windows-latest'
      run: |
        # Create a distribution directory
        New-Item -ItemType Directory -Force -Path "dist"
        
        # Copy the executable and its dependencies
        Copy-Item -Path "build/Release/nwss-cnc.exe" -Destination "dist/"
        
        # Copy Qt DLLs if they exist
        if (Test-Path "build/Release/*.dll") {
          Copy-Item -Path "build/Release/*.dll" -Destination "dist/"
        }
        
        # Create ZIP package
        Compress-Archive -Path "dist/*" -DestinationPath "NWSS-CNC-Windows-${{ github.ref_name || 'latest' }}.zip"
        
    - name: Deploy Qt (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # Find macdeployqt
        QTDIR=$(qmake -query QT_INSTALL_PREFIX)
        MACDEPLOYQT="$QTDIR/bin/macdeployqt"
        
        if [ -f "$MACDEPLOYQT" ]; then
          echo "Found macdeployqt at: $MACDEPLOYQT"
          "$MACDEPLOYQT" build/NWSS-CNC.app -dmg
        else
          echo "macdeployqt not found at expected location: $MACDEPLOYQT"
          find $QTDIR -name "macdeployqt" -type f
        fi
        
    - name: Create macOS DMG (fallback)
      if: matrix.os == 'macos-latest'
      continue-on-error: true
      run: |
        # Install create-dmg if the Qt deployment didn't work
        if [ ! -f "build/NWSS-CNC.dmg" ]; then
          brew install create-dmg
          
          create-dmg \
            --volname "NWSS-CNC" \
            --window-pos 200 120 \
            --window-size 600 400 \
            --icon-size 100 \
            --icon "NWSS-CNC.app" 150 200 \
            --hide-extension "NWSS-CNC.app" \
            --app-drop-link 450 200 \
            "NWSS-CNC-macOS-${{ github.ref_name || 'latest' }}.dmg" \
            "build/NWSS-CNC.app"
        else
          # Rename the Qt-generated DMG
          mv "build/NWSS-CNC.dmg" "NWSS-CNC-macOS-${{ github.ref_name || 'latest' }}.dmg"
        fi
        
    - name: List build artifacts
      run: |
        echo "Build directory contents:"
        ls -la build/ || dir build\
        echo "Root directory contents:"
        ls -la . || dir .
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: |
          *.zip
          *.dmg
          dist/
          build/NWSS-CNC.app
          build/*.dmg
        retention-days: 30
        
    - name: Upload to release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          *.zip
          *.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 