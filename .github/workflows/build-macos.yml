name: Build macOS

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.5.0'
        host: 'mac'
        target: 'desktop'
        modules: 'qtserialport'
        cache: true
        
    - name: Configure CMake
      run: |
        cmake -B build -S nwss-cnc -DCMAKE_BUILD_TYPE=Release
        
    - name: Build
      run: |
        cmake --build build --config Release --target nwss-cnc
        
    - name: Sign and notarize application (if certificates are available)
      continue-on-error: true
      run: |
        if [ -n "${{ secrets.APPLE_CERTIFICATE_P12 }}" ]; then
          echo "Setting up code signing..."
          
          # Create temporary keychain
          KEYCHAIN_PATH=~/build.keychain
          KEYCHAIN_PASSWORD=temp_password_$(date +%s)
          
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security default-keychain -s "$KEYCHAIN_PATH"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security set-keychain-settings -t 3600 -u "$KEYCHAIN_PATH"
          
          # Import certificate
          echo "${{ secrets.APPLE_CERTIFICATE_P12 }}" | base64 --decode > certificate.p12
          security import certificate.p12 -k "$KEYCHAIN_PATH" -P "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          
          # Sign the app bundle with entitlements and hardened runtime
          codesign --force --deep --options runtime --sign "${{ secrets.APPLE_SIGNING_IDENTITY }}" build/NWSS-CNC.app
          
          # Verify signing
          codesign --verify --verbose=2 build/NWSS-CNC.app
          echo "✅ Application signed successfully"
          
          # Notarize if Apple ID credentials are provided
          if [ -n "${{ secrets.APPLE_ID }}" ] && [ -n "${{ secrets.APPLE_ID_PASSWORD }}" ]; then
            echo "Starting notarization process..."
            
            # Create a zip for notarization
            ditto -c -k --keepParent build/NWSS-CNC.app NWSS-CNC.zip
            
            # Submit for notarization
            xcrun notarytool submit NWSS-CNC.zip \
              --apple-id "${{ secrets.APPLE_ID }}" \
              --password "${{ secrets.APPLE_ID_PASSWORD }}" \
              --team-id "${{ secrets.APPLE_TEAM_ID }}" \
              --wait
            
            # Staple the notarization
            xcrun stapler staple build/NWSS-CNC.app
            echo "✅ Application notarized and stapled successfully"
          else
            echo "⚠️  Notarization skipped - Apple ID credentials not configured"
          fi
          
          # Clean up
          rm -f certificate.p12
          security delete-keychain "$KEYCHAIN_PATH"
        else
          echo "⚠️  No signing certificates configured, skipping code signing"
        fi
        
    - name: Create DMG
      run: |
        # Install create-dmg if not available
        if ! command -v create-dmg &> /dev/null; then
          brew install create-dmg
        fi
        
        # Create DMG
        create-dmg \
          --volname "NWSS-CNC" \
          --volicon "nwss-cnc/resources/icons/nwss-cnc-icon.icns" \
          --window-pos 200 120 \
          --window-size 600 400 \
          --icon-size 100 \
          --icon "NWSS-CNC.app" 150 200 \
          --hide-extension "NWSS-CNC.app" \
          --app-drop-link 450 200 \
          "NWSS-CNC-${{ github.ref_name || 'latest' }}.dmg" \
          "build/NWSS-CNC.app"
          
    - name: Package with CPack (fallback)
      if: failure()
      run: |
        cmake --build build --config Release --target package_for_github
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nwss-cnc-macos
        path: |
          *.dmg
          build/*.dmg
          build/NWSS-CNC.app
        retention-days: 30
        
    - name: Upload to release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          *.dmg
          build/*.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 